
version: '1.0'
stages:
  - prepare
  - build
  - test
  - deploy
services:
  mongo_test_service:
    image: mongo:latest
    ports:
      - 27017 
steps:
  main_clone:
    title: Cloning main repository...
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    stage: prepare
  Build:
    type: parallel
    stage: build
    steps:
      BuildLatestAlpine:
        title: Building Alpine based Docker Image
        type: build
        image_name: simple-alpine-server
        working_directory: ./
        tag: "latest"
        dockerfile: Dockerfile
        when:
          branch:
            only:
              - master
      BuildLatestUbuntu:
        title: Building Ubuntu based Docker Image
        type: build
        image_name: simple-ubuntu-server
        working_directory: ./
        tag: "latest"
        dockerfile: Dockerfile.ubuntu
        when:
          branch:
            only:
              - master
      BuildDevAlpine:
        title: Building Alpine based Docker Image
        type: build
        image_name: simple-alpine-server
        working_directory: ./
        tag: "${{CF_BRANCH}}"
        dockerfile: Dockerfile
        when:
          branch:
            ignore:
              - master
      BuildDevUbuntu:
        title: Building Ubuntu based Docker Image
        type: build
        image_name: simple-ubuntu-server
        working_directory: ./
        tag: "${{CF_BRANCH}}"
        dockerfile: Dockerfile.ubuntu
        when:
          branch:
            ignore:
              - master
  Push:
    type: parallel
    stage: build
    steps:
      PushLatestAlpine:
        type: push
        title: Push to Docker Hub
        description: Free text description
        candidate: ${{BuildLatestAlpine}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            only:
              - master
      PushLatestUbuntu:
        type: push
        title: Push to Docker Hub
        description: Free text description
        candidate: ${{BuildLatestAlpine}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            only:
              - master
      PushDevAlpine:
        type: push
        title: Push to Docker Hub
        description: Free text description
        candidate: ${{BuildDevAlpine}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            ignore:
              - master
      PushDevUbuntu:
        type: push
        title: Push to Docker Hub
        description: Free text description
        candidate: ${{BuildDevUbuntu}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            ignore:
              - master
  Tests:
    type: parallel
    stage: test
    steps:
      Successful:      
        title: Running tests
        image: '${{BuildLatestAlpine}}'
        commands:
          - en
      FailedTests:
        title: Running tests
        image: '${{BuildLatestAlpine}}'
        commands:
          - exit 1e
        fail_fast: false
    when:
      branch:
        only:
          - master
    on_success:
      metadata:
        set:
          - ${{BuildAlpine}}:
            - tests: passed

  StoreChart:
    title: Storing Helm chart
    stage: deploy
    image: 'codefresh/cfstep-helm:2.12.3'
    environment:
      - ACTION=push
      - CHART_REF=charts/simple-server
#   Deploy:
    # title: deploying to cluster
    # stage: deploy
    # type: deploy
    # kind: kubernetes
    # cluster: issue-66
    # namespace: testserver
    # file_path: ./deployment.yml
    # candidate:
      # image: ${{BuildAlpine}}
      # registry: dockerhub
    # on_success:
      # annotations:
        # set:
          # - entity_id: default/test-pipeline
            # entity_type: pipeline
            # annotations:
            # - annotation_example: 0.0.8
            # - string_annotation: Test_String

