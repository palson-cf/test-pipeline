
version: '1.0'
stages:
  - prepare
  - build
  - test
  - deploy
services:
  mongo_test_service:
    image: mongo:latest
    ports:
      - 27017 
steps:
  main_clone:
    title: Cloning main repository...
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    stage: prepare
  printenv:      
    title: Print env variables
    image: alpine
    commands:
      - env
  upload:
    title: Upload to Google Drive
    type: palsoncf/google-drive-upload
    stage: prepare
    fail_fast: false
#     environment:
      # - >-
#         GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY='${{GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY}}'
    arguments:
      USER_EMAIL: pavel.nosovet@codefresh.io
      SERVICE_ACCOUNT_EMAIL: googledriveuploader@cf-test-260813.iam.gserviceaccount.com
      GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY: '${{GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY}}'
      UPLOAD_FILE_1:
        - ./Dockerfile
  palsoncf/google-drive-upload:
    type: palsoncf/google-drive-upload
    title: testupload
    fail_fast: true
    stage: prepare
    arguments:
      USER_EMAIL: pavel.nosovets@codefresh.io
      SERVICE_ACCOUNT_EMAIL: googledriveuploader@cf-test-260813.iam.gserviceaccount.com
      GOOGLE_SERVICE_ACCOUNT_PRIVATE_KEY: >-
        LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZB
        QVNDQktjd2dnU2pBZ0VBQW9JQkFRREcrWXhqcDFkVjBvSWMKQXpaQkloc2l5c3NDWko5bm9rNEVM
        TjNDMWdXa3JVQTJoODhGTCtIRExxbjhUbzJIVUVYMC95dWZXVXNlNWdxUgpxbDMvb3VubFd5WmRN
        eTVyRlJ5dUtCQWlwYnZaclZNeWtyZmNHcXpsZGtiWmxxaEd6eFNpN2hCMG54SXV0dVdVCmFsUmZz
        QjR1cUErNlRkbHVkR3VuMnZBTlBKRkFVNERZWXhTbEVlR0NaYy8zNUloQVl4LzVXcHJTU0hlMUlk
        TUkKNjQ5d0xIWnJiSktXYVJvVlFDekF0UGd6M1JmZGJrQ1hMRDdEblNoeC9wQjQzWUE0cEIwS3pz
        YUc5R1B3YXpzeQpRREtZNnN6dUJQRERKNDZlSUlhcmR2d1kzeE1wczl6cTVjbDkzSEpkSEJ3Tmxj
        SDZDZGVXaWZTNXNrSkdQSXdECmhCcDRvS29KQWdNQkFBRUNnZ0VBRXRzalNzT3VWY1pxazIwRktl
        R3BpMVV4MStXTDZ3T2VrUmE2RFVvVnBDZ20KK3dQenduSVVoYTFaRStmOTBZeng2Wk1rOXllUnp1
        UE9BZS9sNkl2dnpubk0yNWcyRmVweVJWbUJRMGRNS0xJYwpQYUZaMEg5V3FJZ3ZrLzgxcmVyWFJ5
        UWpFR280RERxWTdHK3gxSlR1eDAwZ214bmdPUm9mVHZ1WWlYM3I1ZTh1CmNudHhtMFY1bi83VXRu
        dTR5SVhVY2tpRFhHL205SDF0dENRMXlxdU9HWVROVFk4KzVPeVV4S2ZyL28rOURSWk4KQ0tUQlhL
        VHZxOXVDcTdMQWRLQkFMdGNwaEY4cjRQQ25Tb0owVzNpdElXSCswRlA1dUw2bktXdlVCVE9STXph
        egpkMjBSSllwSHZ0MEtnL2V4U25tWFpPaTFLTU02bXlIejBxSFcyZWhPWVFLQmdRRGg4bGNUS0Qr
        NjVlNEd3Z3dQCjJQQlJpYkhKbWEyZDFwOTNTeWNpUGRGSW5VMzVQOHZic0FBNTlJcTVneWxzcEJG
        TlU5bDU2MGVuTVJqWStqVFkKZ01ub0lNOVlGWWJjMnhpcHU1ejlvb2VOWk5lZXdhMTFZaEJaZXor
        MFplVWZGWE12dGNrMGIyK0ZEZkx5UUREUwpPdDJURk5oN045VW1GUHUrQytqT3ZiWFA4d0tCZ1FE
        aGNNdkJQUDhEK3pMa2xLL3d6MFREL1QveE9TRkFXaGkvCkN2WUhyYUVPS01yanhBUHhuRWtjb0Iw
        L2FZcHBFdmtxdEpOUmU2SU0wVEx3cjFsWHVTUnNXYk91MGN4RVc3UU8KYTVMZ01PQnJvMStucFho
        ZGhPeDA5a2FONVFHYWk3endWYnhGSmVxczliV3hMaVF5bVFXNEY3cEs4NERjRVV4Lwp2SFQ3cWo2
        WkV3S0JnQ2x3dlMreVRoNEZWZWEvYUY3dnR3UDljVEk4a1c5RmtmSGJRczR3OEZXVkpGdjJxM2ti
        CmlxOFdmdXNQZDJXSm9mTEEwajVlUE1JWmF5bEFtcmlxeGwxZ3h5YXNyQk9OeTdRMXlORnNJZGg1
        Q21ML3VzU3cKdTdidHQvMXFRdCswbTIvQXM2cCtWY0hka1JXRldHNzJoUFVZK2F0L3pnUXlEUW9L
        UFNUTi9xNnBBb0dCQU16bwphVXJLMWtBWUlyb0JLNm9GdXNzcGRPVWN1RXgxbCtpTlhmSzhycGJn
        SFFuSk1JeDdNVGtEajVJRHEvcTFkQ1NNCjNScEM5WmdRemV4V2RTNTI2ZFJSOURBQ0lWaEF3Zmda
        YnZhM2RrUmZ5cUhtbFBEcjBNQysySUpBbEtTVVByZDAKTmh2anl0cEt1MHJBVmNabnIvc1VGZy9x
        SkVYaXMxV25SZTA1WUl4aEFvR0FLZm1SZCtRRm54ZDBzUHBnTyttTAo0ZkloL291a1FPUWM2Q2Qz
        NUlST2lXZTd4NG84RnpiWElza0xjaUxKdnpHL1VyRnEycTRJR1ZTQ3RJeW1hWlpaClgwd2M5ZUVT
        M1RTd0w0YUhXVkJVcktINk81dklUV0FBMnlBNzFFaFJoMmhRVlBHYngwNXdvdGlzTTBrZzBYcmYK
        VDFQeW1ZMEgxc0dXdVcvU0xPSWliU0k9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0KCg==
  Build:
    type: parallel
    stage: build
    steps:
      BuildLatestAlpine:
        title: Building latest Alpine based Docker Image
        type: build
        image_name: simple-alpine-server
        working_directory: ./
        tag: "latest"
        dockerfile: Dockerfile
        when:
          branch:
            only:
              - master
      BuildLatestUbuntu:
        title: Building latest Ubuntu based Docker Image
        type: build
        image_name: simple-ubuntu-server
        working_directory: ./
        tag: "latest"
        dockerfile: Dockerfile.ubuntu
        when:
          branch:
            only:
              - master
      BuildDevAlpine:
        title: Building dev Alpine based Docker Image
        type: build
        image_name: simple-alpine-server
        working_directory: ./
        tag: "${{CF_BRANCH}}"
        dockerfile: Dockerfile
        when:
          branch:
            ignore:
              - master
      BuildDevUbuntu:
        title: Building dev Ubuntu based Docker Image
        type: build
        image_name: simple-ubuntu-server
        working_directory: ./
        tag: "${{CF_BRANCH}}"
        dockerfile: Dockerfile.ubuntu
        when:
          branch:
            ignore:
              - master
  Push:
    type: parallel
    stage: build
    steps:
      PushLatestAlpine:
        type: push
        title: Push latest Alpine to Docker Hub
        description: Free text description
        candidate: ${{BuildLatestAlpine}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            only:
              - master
      PushLatestUbuntu:
        type: push
        title: Push latest Ubuntu to Docker Hub
        description: Free text description
        candidate: ${{BuildLatestUbuntu}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            only:
              - master
      PushDevAlpine:
        type: push
        title: Push dev Alpine to Docker Hub
        description: Free text description
        candidate: ${{BuildDevAlpine}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            ignore:
              - master
      PushDevUbuntu:
        type: push
        title: Push dev Ubuntu to Docker Hub
        description: Free text description
        candidate: ${{BuildDevUbuntu}}
        tag: "${{CF_SHORT_REVISION}}"
        image_name: palson/http-server
        registry: dockerhub
        stage: build
        when:
          branch:
            ignore:
              - master
  Tests:
    type: parallel
    stage: test
    fail_fast: false
    steps:
      Successful:      
        title: Running successful tests
        image: '${{BuildLatestAlpine}}'
        commands:
          - env
      FailedTests:
        title: Running failed tests
        image: '${{BuildLatestAlpine}}'
        commands:
          - exit 1
    when:
      branch:
        only:
          - master
    on_success:
      metadata:
        set:
          - ${{BuildAlpine}}:
            - tests: passed

  StoreChart:
    title: Storing Helm chart
    stage: deploy
    image: 'codefresh/cfstep-helm:2.12.3'
    fail_fast: false
    environment:
      - ACTION=push
      - CHART_REF=charts/simple-server

  DeployChart:
    title: Deploying Helm chart
    type: helm
    stage: deploy
    arguments:
      CHART_NAME: '${{CHART_REF}}'
      RELEASE_NAME: '${{RELEASE_NAME}}'
      KUBE_CONTEXT: '${{KUBE_CONTEXT}}'

#     image: 'codefresh/cfstep-helm:2.12.3'
    # title: Deploying Helm chart
    # stage: deploy
    # environment:
      # - CHART_REF=charts/simple-server
      # - RELEASE_NAME=my-geo-chart-prod
      # - KUBE_CONTEXT=issue-66
      # - VALUE_image_pullPolicy=Always
      # - VALUE_image_tag='multi-stage'
#       - VALUE_replicaCount=3

#   Deploy:
    # title: deploying to cluster
    # stage: deploy
    # type: deploy
    # kind: kubernetes
    # cluster: issue-66
    # namespace: testserver
    # file_path: ./deployment.yml
    # candidate:
      # image: ${{BuildAlpine}}
      # registry: dockerhub
    # on_success:
      # annotations:
        # set:
          # - entity_id: default/test-pipeline
            # entity_type: pipeline
            # annotations:
            # - annotation_example: 0.0.8
            # - string_annotation: Test_String

