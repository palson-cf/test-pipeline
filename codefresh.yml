
version: '1.0'
stages:
  - prepare
  - build
  - test
  - deploy
steps:
  main_clone:
    title: Cloning main repository...
    type: git-clone
    repo: '${{CF_REPO_OWNER}}/${{CF_REPO_NAME}}'
    revision: '${{CF_REVISION}}'
    stage: prepare
  Build:
    type: parallel
    stage: build
    steps:
      BuildAlpine:
        title: Building Alpine based Docker Image
        type: build
        image_name: simple-server
        working_directory: ./
        tag: "alpine-${{CF_SHORT_REVISION}}"
        dockerfile: Dockerfile
      BuildUbuntu:
        title: Building Ubuntu based Docker Image
        type: build
        image_name: simple-server
        working_directory: ./
        tag: "ubuntu-${{CF_SHORT_REVISION}}"
        dockerfile: Dockerfile.ubuntu
  TestEnv:
    stage: build
    title: echo
    # image: '${{MyAppDockerImage}}'
    image: alpine
    # image: 'cf-registry.codefresh.svc:5000/my-app-image:master'
    commands:
      - env
  Push:
    type: push
    title: Push to Docker Hub
    description: Free text description
    candidate: ${{BuildAlpine}}
    tag: "${{CF_SHORT_REVISION}}"
    image_name: palson/http-server
    registry: dockerhub
    stage: build
  Tests:
    stage: test
    title: Running tests
    image: '${{BuildAlpine}}'
    # image: alpine
    # image: 'cf-registry.codefresh.svc:5000/my-app-image:master'
    fail_fast: false
    commands:
      - env
  Deploy:
    title: deploying to cluster
    stage: deploy
    type: deploy
    kind: kubernetes
    cluster: plcluster 
    namespace: testserver
    file_path: ./deployment.yml
    candidate:
      image: ${{BuildAlpine}}
      registry: dockerhub


